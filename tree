digraph {
	graph [splines=ortho]
	node [labelloc=b shape=plaintext]
	0 [image="/tmp/tmp50qyb7uy/node-0.png"]
	1 [image="/tmp/tmp50qyb7uy/node-1.png"]
	0 -> 1 [xlabel="     (0.84, 41.21, 104.04, 801.68, 1756.76, 1909.97, 1996.08, 2365.07, 4593.14, 4706.38, 4906.96, 6452.71, 12713.85, 26595.24, 37455.95, 38833.7, 44791.4, 62427.57, 66019.68, 77087.07, 81520.76, 82371.37, 86061.65, 98775.79, 134822.88, 192178.31, 201033.6, 236293.83, 252993.59, 283209.1, 301214.15, 379109.33, 407228.5, 423538.45, 552360.98, 617281.05, 635562.84, 702616.98, 703020.51, 767905.67, 806536.45, 902109.3, 999303.23, 1074284.41, 1159677.11, 2403470.59, 2657144.18, 2927710.54, 3180248.41, 3768462.95, 5354691.66, 13058816.6, 13294460.17, 15560200.2, 207336287.02, 133111.94, 5905988.36)     
 "]
	2 [image="/tmp/tmp50qyb7uy/node-2.png"]
	1 -> 2 [xlabel="     (244000.0, 446066.0, 450539.0, 480252.0, 575315.0, 1750000.0, 3500000.0)     
 "]
	3 [image="/tmp/tmp50qyb7uy/node-3.png"]
	1 -> 3 [xlabel="     (605595.0)     
 "]
	4 [image="/tmp/tmp50qyb7uy/node-4.png"]
	0 -> 4 [xlabel="     (33.29, 35.39, 108.55, 136.91, 233.13, 275.21, 335.42, 669.77, 887.28, 997.62, 2664.42, 3609.0, 3808.78, 4312.39, 5164.36, 6086.88, 8591.79, 9121.39, 9539.78, 10169.0, 10356.4, 11502.51, 11980.89, 12080.39, 13397.34, 13886.87, 14540.41, 16152.35, 16654.31, 20846.52, 23638.2, 24931.02, 25544.35, 28173.45, 28280.73, 28376.83, 29585.22, 34208.46, 35321.77, 35642.12, 35773.76, 36021.94, 37865.31, 56406.0, 62366.09, 62614.32, 68768.4, 77013.3, 79627.19, 94385.08, 101034.27, 112778.1, 119932.63, 131401.0, 155438.54, 170644.36, 175881.29, 179849.55, 187635.94, 190561.98, 224186.37, 252855.97, 267036.45, 272618.21, 284451.02, 348724.77, 378417.5, 406818.04, 532261.44, 580175.06, 593142.97, 748231.34, 889586.69, 1050070.04, 1069482.64, 1074541.65, 1200253.79, 1948806.85, 2025143.04, 3186610.63, 3871316.27, 3947966.97, 6075281.48, 7988473.61, 16327048.84, 17840667.93, 28309611.07, 28703295.6, 48038594.27, 112779427.43, 115114700.92, 123545604.62, 154732337.67, 225047680.26, 232018641.72, 344728786.74)     
 "]
}
([], {'No': np.float64(375.0), 'Yes': np.float64(125.0)}, (Annual_Revenue, p=1.5907725192314833e-82, score=370.32418952618457, groups=[[np.float64(0.84), np.float64(41.21), np.float64(104.04), np.float64(801.68), np.float64(1756.76), np.float64(1909.97), np.float64(1996.08), np.float64(2365.07), np.float64(4593.14), np.float64(4706.38), np.float64(4906.96), np.float64(6452.71), np.float64(12713.85), np.float64(26595.24), np.float64(37455.95), np.float64(38833.7), np.float64(44791.4), np.float64(62427.57), np.float64(66019.68), np.float64(77087.07), np.float64(81520.76), np.float64(82371.37), np.float64(86061.65), np.float64(98775.79), np.float64(134822.88), np.float64(192178.31), np.float64(201033.6), np.float64(236293.83), np.float64(252993.59), np.float64(283209.1), np.float64(301214.15), np.float64(379109.33), np.float64(407228.5), np.float64(423538.45), np.float64(552360.98), np.float64(617281.05), np.float64(635562.84), np.float64(702616.98), np.float64(703020.51), np.float64(767905.67), np.float64(806536.45), np.float64(902109.3), np.float64(999303.23), np.float64(1074284.41), np.float64(1159677.11), np.float64(2403470.59), np.float64(2657144.18), np.float64(2927710.54), np.float64(3180248.41), np.float64(3768462.95), np.float64(5354691.66), np.float64(13058816.6), np.float64(13294460.17), np.float64(15560200.2), np.float64(207336287.02), np.float64(133111.94), np.float64(5905988.36)], [np.float64(33.29), np.float64(35.39), np.float64(108.55), np.float64(136.91), np.float64(233.13), np.float64(275.21), np.float64(335.42), np.float64(669.77), np.float64(887.28), np.float64(997.62), np.float64(2664.42), np.float64(3609.0), np.float64(3808.78), np.float64(4312.39), np.float64(5164.36), np.float64(6086.88), np.float64(8591.79), np.float64(9121.39), np.float64(9539.78), np.float64(10169.0), np.float64(10356.4), np.float64(11502.51), np.float64(11980.89), np.float64(12080.39), np.float64(13397.34), np.float64(13886.87), np.float64(14540.41), np.float64(16152.35), np.float64(16654.31), np.float64(20846.52), np.float64(23638.2), np.float64(24931.02), np.float64(25544.35), np.float64(28173.45), np.float64(28280.73), np.float64(28376.83), np.float64(29585.22), np.float64(34208.46), np.float64(35321.77), np.float64(35642.12), np.float64(35773.76), np.float64(36021.94), np.float64(37865.31), np.float64(56406.0), np.float64(62366.09), np.float64(62614.32), np.float64(68768.4), np.float64(77013.3), np.float64(79627.19), np.float64(94385.08), np.float64(101034.27), np.float64(112778.1), np.float64(119932.63), np.float64(131401.0), np.float64(155438.54), np.float64(170644.36), np.float64(175881.29), np.float64(179849.55), np.float64(187635.94), np.float64(190561.98), np.float64(224186.37), np.float64(252855.97), np.float64(267036.45), np.float64(272618.21), np.float64(284451.02), np.float64(348724.77), np.float64(378417.5), np.float64(406818.04), np.float64(532261.44), np.float64(580175.06), np.float64(593142.97), np.float64(748231.34), np.float64(889586.69), np.float64(1050070.04), np.float64(1069482.64), np.float64(1074541.65), np.float64(1200253.79), np.float64(1948806.85), np.float64(2025143.04), np.float64(3186610.63), np.float64(3871316.27), np.float64(3947966.97), np.float64(6075281.48), np.float64(7988473.61), np.float64(16327048.84), np.float64(17840667.93), np.float64(28309611.07), np.float64(28703295.6), np.float64(48038594.27), np.float64(112779427.43), np.float64(115114700.92), np.float64(123545604.62), np.float64(154732337.67), np.float64(225047680.26), np.float64(232018641.72), np.float64(344728786.74)]]), dof=1))
├── ([np.float64(0.84), np.float64(41.21), np.float64(104.04), np.float64(801.68), np.float64(1756.76), np.float64(1909.97), np.float64(1996.08), np.float64(2365.07), np.float64(4593.14), np.float64(4706.38), np.float64(4906.96), np.float64(6452.71), np.float64(12713.85), np.float64(26595.24), np.float64(37455.95), np.float64(38833.7), np.float64(44791.4), np.float64(62427.57), np.float64(66019.68), np.float64(77087.07), np.float64(81520.76), np.float64(82371.37), np.float64(86061.65), np.float64(98775.79), np.float64(134822.88), np.float64(192178.31), np.float64(201033.6), np.float64(236293.83), np.float64(252993.59), np.float64(283209.1), np.float64(301214.15), np.float64(379109.33), np.float64(407228.5), np.float64(423538.45), np.float64(552360.98), np.float64(617281.05), np.float64(635562.84), np.float64(702616.98), np.float64(703020.51), np.float64(767905.67), np.float64(806536.45), np.float64(902109.3), np.float64(999303.23), np.float64(1074284.41), np.float64(1159677.11), np.float64(2403470.59), np.float64(2657144.18), np.float64(2927710.54), np.float64(3180248.41), np.float64(3768462.95), np.float64(5354691.66), np.float64(13058816.6), np.float64(13294460.17), np.float64(15560200.2), np.float64(207336287.02), np.float64(133111.94), np.float64(5905988.36)], {'No': np.float64(375.0), 'Yes': np.float64(26.0)}, (Total_Funding, p=3.7921547159348954e-24, score=102.75527137836784, groups=[[np.float64(244000.0), np.float64(446066.0), np.float64(450539.0), np.float64(480252.0), np.float64(575315.0), np.float64(1750000.0), np.float64(3500000.0)], [np.float64(605595.0)]]), dof=1))
│   ├── ([np.float64(244000.0), np.float64(446066.0), np.float64(450539.0), np.float64(480252.0), np.float64(575315.0), np.float64(1750000.0), np.float64(3500000.0)], {'No': 0, 'Yes': np.float64(7.0)}, <Invalid Chaid Split> - the minimum parent node size threshold has been reached)
│   └── ([np.float64(605595.0)], {'No': np.float64(375.0), 'Yes': np.float64(19.0)}, <Invalid Chaid Split> - the max depth has been reached)
└── ([np.float64(33.29), np.float64(35.39), np.float64(108.55), np.float64(136.91), np.float64(233.13), np.float64(275.21), np.float64(335.42), np.float64(669.77), np.float64(887.28), np.float64(997.62), np.float64(2664.42), np.float64(3609.0), np.float64(3808.78), np.float64(4312.39), np.float64(5164.36), np.float64(6086.88), np.float64(8591.79), np.float64(9121.39), np.float64(9539.78), np.float64(10169.0), np.float64(10356.4), np.float64(11502.51), np.float64(11980.89), np.float64(12080.39), np.float64(13397.34), np.float64(13886.87), np.float64(14540.41), np.float64(16152.35), np.float64(16654.31), np.float64(20846.52), np.float64(23638.2), np.float64(24931.02), np.float64(25544.35), np.float64(28173.45), np.float64(28280.73), np.float64(28376.83), np.float64(29585.22), np.float64(34208.46), np.float64(35321.77), np.float64(35642.12), np.float64(35773.76), np.float64(36021.94), np.float64(37865.31), np.float64(56406.0), np.float64(62366.09), np.float64(62614.32), np.float64(68768.4), np.float64(77013.3), np.float64(79627.19), np.float64(94385.08), np.float64(101034.27), np.float64(112778.1), np.float64(119932.63), np.float64(131401.0), np.float64(155438.54), np.float64(170644.36), np.float64(175881.29), np.float64(179849.55), np.float64(187635.94), np.float64(190561.98), np.float64(224186.37), np.float64(252855.97), np.float64(267036.45), np.float64(272618.21), np.float64(284451.02), np.float64(348724.77), np.float64(378417.5), np.float64(406818.04), np.float64(532261.44), np.float64(580175.06), np.float64(593142.97), np.float64(748231.34), np.float64(889586.69), np.float64(1050070.04), np.float64(1069482.64), np.float64(1074541.65), np.float64(1200253.79), np.float64(1948806.85), np.float64(2025143.04), np.float64(3186610.63), np.float64(3871316.27), np.float64(3947966.97), np.float64(6075281.48), np.float64(7988473.61), np.float64(16327048.84), np.float64(17840667.93), np.float64(28309611.07), np.float64(28703295.6), np.float64(48038594.27), np.float64(112779427.43), np.float64(115114700.92), np.float64(123545604.62), np.float64(154732337.67), np.float64(225047680.26), np.float64(232018641.72), np.float64(344728786.74)], {'No': 0, 'Yes': np.float64(99.0)}, <Invalid Chaid Split> - the node only contains single category respondents)
([], {'No': np.float64(76.0), 'Yes': np.float64(24.0)}, (Annual_Revenue, p=6.779245803645392e-18, score=74.27983539094652, groups=[[np.float64(0.84), np.float64(41.21), np.float64(104.04), np.float64(2365.07), np.float64(37455.95), np.float64(98775.79), np.float64(552360.98), np.float64(617281.05), np.float64(702616.98), np.float64(703020.51), np.float64(999303.23), np.float64(66125.195)], [np.float64(33.29), np.float64(108.55), np.float64(233.13), np.float64(669.77), np.float64(9539.78), np.float64(11502.51), np.float64(12080.39), np.float64(16654.31), np.float64(34208.46), np.float64(37865.31), np.float64(94385.08), np.float64(131401.0), np.float64(252855.97), np.float64(580175.06), np.float64(1069482.64), np.float64(1948806.85), np.float64(3947966.97), np.float64(16327048.84), np.float64(232018641.72)]]), dof=1))
├── ([np.float64(0.84), np.float64(41.21), np.float64(104.04), np.float64(2365.07), np.float64(37455.95), np.float64(98775.79), np.float64(552360.98), np.float64(617281.05), np.float64(702616.98), np.float64(703020.51), np.float64(999303.23), np.float64(66125.195)], {'No': np.float64(76.0), 'Yes': np.float64(5.0)}, (Founded_Year, p=0.00037431224710860177, score=12.656250000000002, groups=[[np.float64(1961.0), np.float64(1970.0), np.float64(1985.0), np.float64(1987.0), np.float64(1994.0), np.float64(2001.0), np.float64(2002.0), np.float64(2003.0), np.float64(2005.0), np.float64(2006.0), np.float64(2008.0), np.float64(2009.0), np.float64(2010.0), np.float64(2011.0), np.float64(2012.0), np.float64(2013.0), np.float64(2014.0), np.float64(2015.0), np.float64(2016.0), np.float64(2020.0), np.float64(2021.0), np.float64(2023.0)], [np.float64(2007.0), np.float64(2018.0), np.float64(2017.0), np.float64(2022.0), np.float64(2019.0)]]), dof=1))
│   ├── ([np.float64(1961.0), np.float64(1970.0), np.float64(1985.0), np.float64(1987.0), np.float64(1994.0), np.float64(2001.0), np.float64(2002.0), np.float64(2003.0), np.float64(2005.0), np.float64(2006.0), np.float64(2008.0), np.float64(2009.0), np.float64(2010.0), np.float64(2011.0), np.float64(2012.0), np.float64(2013.0), np.float64(2014.0), np.float64(2015.0), np.float64(2016.0), np.float64(2020.0), np.float64(2021.0), np.float64(2023.0)], {'No': np.float64(57.0), 'Yes': 0}, <Invalid Chaid Split> - the max depth has been reached)
│   └── ([np.float64(2007.0), np.float64(2018.0), np.float64(2017.0), np.float64(2022.0), np.float64(2019.0)], {'No': np.float64(19.0), 'Yes': np.float64(5.0)}, <Invalid Chaid Split> - the minimum parent node size threshold has been reached)
└── ([np.float64(33.29), np.float64(108.55), np.float64(233.13), np.float64(669.77), np.float64(9539.78), np.float64(11502.51), np.float64(12080.39), np.float64(16654.31), np.float64(34208.46), np.float64(37865.31), np.float64(94385.08), np.float64(131401.0), np.float64(252855.97), np.float64(580175.06), np.float64(1069482.64), np.float64(1948806.85), np.float64(3947966.97), np.float64(16327048.84), np.float64(232018641.72)], {'No': 0, 'Yes': np.float64(19.0)}, <Invalid Chaid Split> - the minimum parent node size threshold has been reached)
([], {'No': np.float64(76.0), 'Yes': np.float64(24.0)}, (Annual_Revenue, p=6.779245803645392e-18, score=74.27983539094652, groups=[[np.float64(0.84), np.float64(41.21), np.float64(104.04), np.float64(2365.07), np.float64(37455.95), np.float64(98775.79), np.float64(552360.98), np.float64(617281.05), np.float64(702616.98), np.float64(703020.51), np.float64(999303.23), np.float64(66125.195)], [np.float64(33.29), np.float64(108.55), np.float64(233.13), np.float64(669.77), np.float64(9539.78), np.float64(11502.51), np.float64(12080.39), np.float64(16654.31), np.float64(34208.46), np.float64(37865.31), np.float64(94385.08), np.float64(131401.0), np.float64(252855.97), np.float64(580175.06), np.float64(1069482.64), np.float64(1948806.85), np.float64(3947966.97), np.float64(16327048.84), np.float64(232018641.72)]]), dof=1))
├── ([np.float64(0.84), np.float64(41.21), np.float64(104.04), np.float64(2365.07), np.float64(37455.95), np.float64(98775.79), np.float64(552360.98), np.float64(617281.05), np.float64(702616.98), np.float64(703020.51), np.float64(999303.23), np.float64(66125.195)], {'No': np.float64(76.0), 'Yes': np.float64(5.0)}, (City, p=0.001493241853359394, score=10.086936090225565, groups=[['Bengaluru', 'Lucknow', 'Delhi', 'Chhatarpur'], ['Bhopal', 'Bilaspur', 'Chennai', 'Faridabad', 'Gurgaon', 'Gurugram', 'Hyderabad', 'Indore', 'Jind', 'Kanpur', 'Kochi', 'Kolkata', 'Kozhikode', 'Madurai', 'Mumbai', 'New Delhi', 'Noida', 'Patna', 'Pune', 'Raipur', 'Rajpura', 'Ranchi', 'Salem', 'Shivamogga', 'Sonipat', 'Surat', 'Thane', 'Udaipur', 'Vadodara', 'Vasai']]), dof=1))
│   ├── (['Bengaluru', 'Lucknow', 'Delhi', 'Chhatarpur'], {'No': np.float64(23.0), 'Yes': np.float64(5.0)}, <Invalid Chaid Split> - the minimum parent node size threshold has been reached)
│   └── (['Bhopal', 'Bilaspur', 'Chennai', 'Faridabad', 'Gurgaon', 'Gurugram', 'Hyderabad', 'Indore', 'Jind', 'Kanpur', 'Kochi', 'Kolkata', 'Kozhikode', 'Madurai', 'Mumbai', 'New Delhi', 'Noida', 'Patna', 'Pune', 'Raipur', 'Rajpura', 'Ranchi', 'Salem', 'Shivamogga', 'Sonipat', 'Surat', 'Thane', 'Udaipur', 'Vadodara', 'Vasai'], {'No': np.float64(53.0), 'Yes': 0}, <Invalid Chaid Split> - the max depth has been reached)
└── ([np.float64(33.29), np.float64(108.55), np.float64(233.13), np.float64(669.77), np.float64(9539.78), np.float64(11502.51), np.float64(12080.39), np.float64(16654.31), np.float64(34208.46), np.float64(37865.31), np.float64(94385.08), np.float64(131401.0), np.float64(252855.97), np.float64(580175.06), np.float64(1069482.64), np.float64(1948806.85), np.float64(3947966.97), np.float64(16327048.84), np.float64(232018641.72)], {'No': 0, 'Yes': np.float64(19.0)}, <Invalid Chaid Split> - the minimum parent node size threshold has been reached)
([], {'No': np.float64(76.0), 'Yes': np.float64(24.0)}, (Annual_Revenue, p=6.779245803645392e-18, score=74.27983539094652, groups=[[np.float64(0.84), np.float64(41.21), np.float64(104.04), np.float64(2365.07), np.float64(37455.95), np.float64(98775.79), np.float64(552360.98), np.float64(617281.05), np.float64(702616.98), np.float64(703020.51), np.float64(999303.23), np.float64(66125.195)], [np.float64(33.29), np.float64(108.55), np.float64(233.13), np.float64(669.77), np.float64(9539.78), np.float64(11502.51), np.float64(12080.39), np.float64(16654.31), np.float64(34208.46), np.float64(37865.31), np.float64(94385.08), np.float64(131401.0), np.float64(252855.97), np.float64(580175.06), np.float64(1069482.64), np.float64(1948806.85), np.float64(3947966.97), np.float64(16327048.84), np.float64(232018641.72)]]), dof=1))
├── ([np.float64(0.84), np.float64(41.21), np.float64(104.04), np.float64(2365.07), np.float64(37455.95), np.float64(98775.79), np.float64(552360.98), np.float64(617281.05), np.float64(702616.98), np.float64(703020.51), np.float64(999303.23), np.float64(66125.195)], {'No': np.float64(76.0), 'Yes': np.float64(5.0)}, (Founded_Year, p=0.00037431224710860177, score=12.656250000000002, groups=[[np.float64(1961.0), np.float64(1970.0), np.float64(1985.0), np.float64(1987.0), np.float64(1994.0), np.float64(2001.0), np.float64(2002.0), np.float64(2003.0), np.float64(2005.0), np.float64(2006.0), np.float64(2008.0), np.float64(2009.0), np.float64(2010.0), np.float64(2011.0), np.float64(2012.0), np.float64(2013.0), np.float64(2014.0), np.float64(2015.0), np.float64(2016.0), np.float64(2020.0), np.float64(2021.0), np.float64(2023.0)], [np.float64(2007.0), np.float64(2018.0), np.float64(2017.0), np.float64(2022.0), np.float64(2019.0)]]), dof=1))
│   ├── ([np.float64(1961.0), np.float64(1970.0), np.float64(1985.0), np.float64(1987.0), np.float64(1994.0), np.float64(2001.0), np.float64(2002.0), np.float64(2003.0), np.float64(2005.0), np.float64(2006.0), np.float64(2008.0), np.float64(2009.0), np.float64(2010.0), np.float64(2011.0), np.float64(2012.0), np.float64(2013.0), np.float64(2014.0), np.float64(2015.0), np.float64(2016.0), np.float64(2020.0), np.float64(2021.0), np.float64(2023.0)], {'No': np.float64(57.0), 'Yes': 0}, <Invalid Chaid Split> - the max depth has been reached)
│   └── ([np.float64(2007.0), np.float64(2018.0), np.float64(2017.0), np.float64(2022.0), np.float64(2019.0)], {'No': np.float64(19.0), 'Yes': np.float64(5.0)}, <Invalid Chaid Split> - the minimum parent node size threshold has been reached)
└── ([np.float64(33.29), np.float64(108.55), np.float64(233.13), np.float64(669.77), np.float64(9539.78), np.float64(11502.51), np.float64(12080.39), np.float64(16654.31), np.float64(34208.46), np.float64(37865.31), np.float64(94385.08), np.float64(131401.0), np.float64(252855.97), np.float64(580175.06), np.float64(1069482.64), np.float64(1948806.85), np.float64(3947966.97), np.float64(16327048.84), np.float64(232018641.72)], {'No': 0, 'Yes': np.float64(19.0)}, <Invalid Chaid Split> - the minimum parent node size threshold has been reached)
([], {'No': np.float64(76.0), 'Yes': np.float64(24.0)}, (Annual_Revenue, p=6.779245803645392e-18, score=74.27983539094652, groups=[[np.float64(0.84), np.float64(41.21), np.float64(104.04), np.float64(2365.07), np.float64(37455.95), np.float64(98775.79), np.float64(552360.98), np.float64(617281.05), np.float64(702616.98), np.float64(703020.51), np.float64(999303.23), np.float64(66125.195)], [np.float64(33.29), np.float64(108.55), np.float64(233.13), np.float64(669.77), np.float64(9539.78), np.float64(11502.51), np.float64(12080.39), np.float64(16654.31), np.float64(34208.46), np.float64(37865.31), np.float64(94385.08), np.float64(131401.0), np.float64(252855.97), np.float64(580175.06), np.float64(1069482.64), np.float64(1948806.85), np.float64(3947966.97), np.float64(16327048.84), np.float64(232018641.72)]]), dof=1))
├── ([np.float64(0.84), np.float64(41.21), np.float64(104.04), np.float64(2365.07), np.float64(37455.95), np.float64(98775.79), np.float64(552360.98), np.float64(617281.05), np.float64(702616.98), np.float64(703020.51), np.float64(999303.23), np.float64(66125.195)], {'No': np.float64(76.0), 'Yes': np.float64(5.0)}, (City, p=0.001493241853359394, score=10.086936090225565, groups=[['Bengaluru', 'Lucknow', 'Delhi', 'Chhatarpur'], ['Bhopal', 'Bilaspur', 'Chennai', 'Faridabad', 'Gurgaon', 'Gurugram', 'Hyderabad', 'Indore', 'Jind', 'Kanpur', 'Kochi', 'Kolkata', 'Kozhikode', 'Madurai', 'Mumbai', 'New Delhi', 'Noida', 'Patna', 'Pune', 'Raipur', 'Rajpura', 'Ranchi', 'Salem', 'Shivamogga', 'Sonipat', 'Surat', 'Thane', 'Udaipur', 'Vadodara', 'Vasai']]), dof=1))
│   ├── (['Bengaluru', 'Lucknow', 'Delhi', 'Chhatarpur'], {'No': np.float64(23.0), 'Yes': np.float64(5.0)}, <Invalid Chaid Split> - the minimum parent node size threshold has been reached)
│   └── (['Bhopal', 'Bilaspur', 'Chennai', 'Faridabad', 'Gurgaon', 'Gurugram', 'Hyderabad', 'Indore', 'Jind', 'Kanpur', 'Kochi', 'Kolkata', 'Kozhikode', 'Madurai', 'Mumbai', 'New Delhi', 'Noida', 'Patna', 'Pune', 'Raipur', 'Rajpura', 'Ranchi', 'Salem', 'Shivamogga', 'Sonipat', 'Surat', 'Thane', 'Udaipur', 'Vadodara', 'Vasai'], {'No': np.float64(53.0), 'Yes': 0}, <Invalid Chaid Split> - the max depth has been reached)
└── ([np.float64(33.29), np.float64(108.55), np.float64(233.13), np.float64(669.77), np.float64(9539.78), np.float64(11502.51), np.float64(12080.39), np.float64(16654.31), np.float64(34208.46), np.float64(37865.31), np.float64(94385.08), np.float64(131401.0), np.float64(252855.97), np.float64(580175.06), np.float64(1069482.64), np.float64(1948806.85), np.float64(3947966.97), np.float64(16327048.84), np.float64(232018641.72)], {'No': 0, 'Yes': np.float64(19.0)}, <Invalid Chaid Split> - the minimum parent node size threshold has been reached)
